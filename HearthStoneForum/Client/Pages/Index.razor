@page "/"
@inject HttpClient Http

<PageTitle>炉石传说游戏论坛</PageTitle>
<div class="main-warp">
    <div class="main-top flex-column flex-md-row">
        <div class="main-top-left flex-column flex-md-row">
            <IndexCarousel Data="@Carousels"></IndexCarousel>
            <IndexNotice Data="@Notices"></IndexNotice>
        </div>
        <div class="main-top-right rounded-lg">
            <IndexSign></IndexSign>
        </div>
    </div>
    <div class="main-bottom flex-column flex-md-row">
        <div class="main-bottom-left">
            <IndexArea Data="@Areas"></IndexArea>
        </div>
        <div class="main-bottom-right elevation-3">
            <IndexRecommend NewInvitations="@NewInvitations" RecommendInvitations="@RecommendInvitations"></IndexRecommend>
        </div>
    </div>
</div>
@code {
    private List<Carousel> Carousels = new List<Carousel>();
    private List<Notice> Notices = new();
    private int TodaySignCount = 0;
    private List<AreaDTO> Areas = new();
    private List<InvitationDTORecommend> RecommendInvitations = new();
    private List<InvitationDTORecommend> NewInvitations = new();

    protected override async Task OnInitializedAsync()
    {
        Carousels = (await Http.GetFromJsonAsync<ApiResult<List<Carousel>>>("carousels")).Data;
        Notices = (await Http.GetFromJsonAsync<ApiResult<List<Notice>>>("notices/new_notices")).Data;
        TodaySignCount = (await Http.GetFromJsonAsync<ApiResult<int>>("signs/today_count")).Data;
        Areas = (await Http.GetFromJsonAsync<ApiResult<List<AreaDTO>>>("areas")).Data;
        RecommendInvitations = (await Http.GetFromJsonAsync<ApiResult<List<InvitationDTORecommend>>>("invitations/recommend")).Data;
        NewInvitations = (await Http.GetFromJsonAsync<ApiResult<List<InvitationDTORecommend>>>("invitations/new")).Data;
    }

    
    
}
