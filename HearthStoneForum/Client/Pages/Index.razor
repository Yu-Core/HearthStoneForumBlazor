@page "/"
@inject HttpClient Http
@inject IJSRuntime JS


<PageTitle>炉石传说游戏论坛</PageTitle>
<div class="main-warp">
    <div class="main-top">
        <div class="main-top-left flex-column flex-sm-row">
            <div class="carousel-warp">
                <div class="carousel-main" id='carousel-main'>
                    <ul id="carousel-pic">
                        @foreach (var item in Carousels)
                        {
                            <li>
                                <img src="@item.ImagePath" alt="@item.Title">
                            </li>
                        }
                    </ul>
                    <ol id="carousel-list" class="d-none d-md-flex">
                        @for (int i = 0; i < Carousels.Count; i++)
                        {
                            <li class="@(i==0?"on":"")">@(i+1)</li>
                        }
                    </ol>
                </div>
            </div>
            <div class="notice-warp rounded p-2 px-3 px-sm-5">
                <div class="notice-head">
                    最新公告
                </div>
                <div class="notice-list">
                    @for (var i = 0; i < 4; i++)
                    {
                        <div class="notice-list-item">
                            <div class="notice-list-item-left">王师北定中原日，家祭无忘告乃翁</div>
                            <div class="notice-list-item-right">2021-2-3</div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="main-top-right">
        </div>
    </div>
    <div class="main-bottom">
        <div class="main-bottom-left">
        </div>
        <div class="main-bottom-right">
        </div>
    </div>
</div>
@code {
    private List<Carousel> Carousels = new List<Carousel>();

    protected override async Task OnInitializedAsync()
    {
        ApiResult<List<Carousel>> apiResult = await Http.GetFromJsonAsync<ApiResult<List<Carousel>>>("carousels");
        Carousels = apiResult.Data;

    }

    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./js/carousel.js");
            await module.InvokeVoidAsync("CarouselStart");
        }
    }
}
