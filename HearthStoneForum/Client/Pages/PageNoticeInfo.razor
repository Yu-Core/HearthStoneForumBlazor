@page "/noticeInfo/{id:int}"
@inject HttpClient Http
@inject NavigationManager navigation

<div class="main @(Display?"":"d-none")">
    <div class="notice-wrap">
        <div class="breadcrumbs">
            你所在的位置：
            <MBreadcrumbs>
                <MBreadcrumbsItem Style="font-size:0.9rem" Href="">炉石论坛</MBreadcrumbsItem>
                <MBreadcrumbsItem Style="font-size:0.9rem" Href="Notices">论坛公告</MBreadcrumbsItem>
                <MBreadcrumbsItem Class="d-none d-md-block" Style="font-size:0.9rem" Disabled>@Notice.Title</MBreadcrumbsItem>
            </MBreadcrumbs>
        </div>
        <div class="notice-head">
            <h2>@Notice.Title</h2>
        </div>
        <div class="notice-content">
            <SharedQuillDisplay>
                @((MarkupString)(Notice.Description ?? string.Empty))
            </SharedQuillDisplay>
        </div>
    </div>
    <SharedScrollButton Float ScrollTarget="scrolling" Icon="mdi-arrow-up-thick"></SharedScrollButton>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    private Notice Notice = new();
    private bool Display { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<ApiResult<Notice>>($"notices/{id}");
            if(result.Successful == false){
                navigation.NavigateTo("404");
                return;
            }
            Notice = result.Data;
        }
        catch (Exception)
        {
            navigation.NavigateTo("404");
        }

        Display = true;
    }
}
